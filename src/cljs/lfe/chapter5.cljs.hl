(ns lfe.chapter5
    (:require [hoplon.reveal :refer [bullet notes quicklist]]
              [lfe.reveal :refer [chapter slide]]
              [lfe.sample-code :as sample-code]))

(defn slides []
  (chapter :title "Test Drive"

    (slide :title "Building Projects"
     (bullet :class "fragment" "Let's do it!")
     (bullet :class "fragment" "Wait, first we need dependencies ...")
     (bullet :class "fragment" "What are they?")
     (notes "If you really want to get to know LFE, the next logical step "
            "is to start creating LFE projects."))

    (slide :title "Dependencies"
     (quicklist
      (span "Easily run multiple versions of Erlang with " (strong "kerl"))
      (span "Download (and possibly build) " (strong "rebar"))
      (strong "LFE")
      (span "Download and install " (strong "lfetool")))
     (notes "I recommend 4 main dependencies: kerl, rebar, LFE itself, and "
            "lfetool."))

    (slide :title "Dependencies"
      (bullet "If you want to run scripts, install LFE")
      (sample-code/install-lfe)
      (bullet "Otherwise, use rebar (more later)")
      (notes "In gneneral, I am a firm believer in non-system installations; "
             "put everything you need to develop your code (and deploy it!) "
             "in a single directory."
             (br)(br)
             "That being said, if you want to be able to run scripts using "
             "LFE, you'll probably want to have LFE installed system-wide. "
             "This is how you'd do that."))

    (slide :title "Dependencies"
      (bullet "Install lfetool")
      (sample-code/install-lfetool)
      (bullet "In the future, easily get the latest version:")
      (sample-code/update-lfetool)
      (notes "The lfetool dependency is a breeze to install and use: download "
             "it, run it, update it when you need to."))

    (slide :title "Building Things"
      (bullet "A quick look at the next few miles:")
      (quicklist
        "Create a script"
        "Run it!"
        "Create a library"
        "Create a service")
      (notes "That's it for the dependencies (you'll get LFE for free when you "
             "use lfetool to create projects). This next section is going to "
             "cover a lot, so here's a quick map for you ..."))

    (slide :title "Create a Script"
      (bullet "Create and Run")
      (sample-code/create-a-script)
      (notes "This is about as simple as it gets. Note that it does require "
             "LFE to be installed system-wide."))

    (slide :title "Create a Script"
      (bullet "Quick Look Inside")
      (sample-code/script-guts)
      (notes "Here's the sample script that is generated by default."))

    (slide :title "Create a Library"
      (sample-code/library-1)
      (notes "That was simple. "
             "Next, let's create a library project. After all the files are "
             "created, it will run the unit tests (not shown) and the will "
             "fail -- by design. Fix the broken code, your tests pass. TDD "
             "from the start :-)"
             (br)(br)
             "A quick filtered find shows us the files that were created by "
             "lfetool."))

    (slide :title "Create a Library"
      (bullet "Quick Peek at src/my-lib.lfe")
      (sample-code/library-2)
      (notes "There's the broken code I was telling you about."))

    (slide :title "Create a Library"
      (bullet "Quick Peek at test/my-lib_tests.lfe")
      (sample-code/library-3)
      (notes "And here's the test that will fail because of the bad code."))

    (slide :title "Create a Service"
      (sample-code/service-1)
      (notes "Next up: OTP apps! This one creates files needed to run an "
             "OTP service."))

    (slide :title "Create a Service"
      (bullet "Quick Peek at src/my-svc_app.lfe")
      (sample-code/service-2)
      (notes "Here is one of the created files (the app file)."))

    (slide :title "Create a Service"
      (bullet "Quick Peek at the API section of src/my-svc_server.lfe")
      (sample-code/service-5)
      (notes "Here is a part of the server file."))

    (slide :title "Create a Service"
      (bullet "Starting a REPL for the service code")
      (sample-code/service-3)
      (bullet "Starting and checking the service")
      (sample-code/service-4)
      (notes "We can now start up the LFE REPL in project dir, start the app, "
             "and make sure it works."
             (br)(br)
             "Make a few calls, get the expected responses, and you're ready "
             "to take this OTP skeleton and turn it into your next production "
             "app ;-)"
             (br)(br)
             "Now that we've seen how projects are created -- and how easy it "
             "is to do! -- let's take things further and actually develop a "
             "project that more closely resembles a real-world codebase. "
             "Sort of."))

    ))
